#N canvas 23 80 917 624 10;
#X declare -path ../tID;
#X obj 4 -37 cnv 15 900 60 empty empty onsetDetect 20 12 0 14 -233017
-66577 0;
#X obj 10 110 bng 15 250 50 0 empty empty 1) 20 7 0 10 -262144 -1 -258113
;
#X obj 11 198 bng 15 250 50 0 empty empty 2) 20 7 0 10 -262144 -1 -258113
;
#X obj 229 80 hsl 475 70 0 100000 0 0 \$0-scrub \$0-scrub.r empty -2
-8 0 10 -228856 -258113 -1 0 0;
#N canvas 0 22 450 300 openSample 0;
#X obj 28 -41 inlet;
#X obj 28 55 soundfiler;
#X obj 28 7 pack s \$0;
#X obj 28 -17 openpanel;
#X msg 28 31 read -resize \$1 \$2-waveform;
#X obj 28 80 s \$0-length;
#X connect 0 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X restore 10 140 pd openSample;
#X obj 13 441 bng 15 250 50 0 empty empty 3) 20 7 0 10 -262144 -1 -258113
;
#N canvas 0 22 672 349 writeToTables 0;
#X obj 55 197 tabwrite \$0-onsets;
#X obj 335 33 r \$0-idx;
#X obj 55 23 inlet;
#X obj 16 23 inlet;
#X obj 16 201 \$0;
#X obj 16 166 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 128 133 tabwrite \$0-attacks;
#X obj 254 50 sel 0;
#X obj 128 90 t f b;
#X obj 239 107 f;
#X obj 267 107 + 1;
#X obj 254 82 0;
#X obj 128 66 f;
#X obj 128 40 sel 1;
#X obj 207 261 table \$0-attacks;
#X obj 335 59 * 1024;
#X obj 335 82 - 6144;
#X msg 16 233 \; \$1-onsets normalize \; \$1-onsetFunction normalize
;
#X obj 281 136 outlet;
#X connect 1 0 7 0;
#X connect 1 0 15 0;
#X connect 2 0 0 0;
#X connect 2 0 13 0;
#X connect 3 0 5 0;
#X connect 4 0 17 0;
#X connect 5 0 4 0;
#X connect 7 0 11 0;
#X connect 8 0 6 0;
#X connect 8 1 9 0;
#X connect 9 0 10 0;
#X connect 9 0 6 1;
#X connect 9 0 18 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 12 0 8 0;
#X connect 13 0 12 0;
#X connect 15 0 16 0;
#X connect 16 0 0 1;
#X connect 16 0 12 1;
#X restore 11 353 pd writeToTables;
#X floatatom 61 293 5 0 0 1 - - -;
#N canvas 52 22 450 300 playSample 0;
#X obj 39 130 tabplay~ \$0-waveform;
#X obj 296 130 line;
#X obj 311 23 r \$0-length;
#X obj 296 73 f;
#X msg 296 105 0 \, 100000 \$1;
#X obj 311 48 / 44.1;
#X obj 39 56 t b b;
#X obj 296 159 s \$0-scrub;
#X obj 39 253 outlet~;
#X obj 39 31 route bang stop;
#X obj 40 8 inlet;
#X msg 205 113 stop;
#X obj 184 181 1;
#X obj 156 181 0;
#X obj 156 207 outlet;
#X connect 0 0 8 0;
#X connect 0 1 13 0;
#X connect 1 0 7 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 3 1;
#X connect 6 0 0 0;
#X connect 6 1 3 0;
#X connect 6 1 12 0;
#X connect 9 0 6 0;
#X connect 9 1 11 0;
#X connect 10 0 9 0;
#X connect 11 0 0 0;
#X connect 11 0 1 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X restore 428 303 pd playSample;
#X floatatom 506 426 5 0 0 0 - - -;
#X obj 428 276 t b b;
#X obj 475 473 sel 1;
#X obj 475 499 click~;
#X obj 428 516 dac~;
#X msg 54 436 stop;
#X msg 472 247 stop;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-waveform 665778 float 2;
#X coords 0 1 665778 -1 480 70 1;
#X restore 226 80 graph;
#X obj 11 227 t b b b;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-onsets 665778 float 2;
#X coords 0 1 665778 0 480 70 1 0 0;
#X restore 226 80 graph;
#X floatatom 124 438 5 0 0 0 - - -;
#X obj 11 31 declare -path ../tID;
#N canvas 681 22 477 451 computeFlux 0;
#X obj 20 95 f;
#X obj 20 13 inlet;
#X obj 20 146 until;
#X obj 20 170 f;
#X obj 103 153 0;
#X obj 149 110 s \$0-onsets;
#X msg 239 80 resize \$1;
#X obj 21 397 outlet;
#X obj 21 194 t f f;
#X obj 48 220 s \$0-idx;
#X obj 209 182 s \$0-lop;
#X msg 122 38 const 0;
#X obj 20 121 t f b;
#X obj 199 333 sigmund~ -t env;
#X obj 21 374 *;
#X obj 21 268 t f f;
#X obj 199 285 pack f \$0;
#X obj 165 133 s \$0-onsetFunction;
#X obj 47 170 + 1;
#X obj 183 156 s \$0-meanMedian;
#X msg 156 72 resize \$1;
#X obj 249 36 s \$0-attacks;
#X obj 138 209 loadbang;
#X obj 35 68 / 1024;
#X obj 21 244 * 1024;
#X msg 21 313 analyze \$1 2048;
#X msg 199 309 list \$2-waveform 2048 \$1 44100 0;
#X obj 199 357 > 60;
#X msg 138 231 normalize 0;
#X obj 21 337 specFlux \$0-waveform 128;
#X obj 35 42 r \$0-length;
#X connect 0 0 12 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 3 0 18 0;
#X connect 4 0 3 1;
#X connect 6 0 10 0;
#X connect 6 0 17 0;
#X connect 6 0 19 0;
#X connect 8 0 24 0;
#X connect 8 1 9 0;
#X connect 11 0 5 0;
#X connect 11 0 21 0;
#X connect 12 0 2 0;
#X connect 12 1 4 0;
#X connect 12 1 11 0;
#X connect 13 0 27 0;
#X connect 14 0 7 0;
#X connect 15 0 25 0;
#X connect 15 1 16 0;
#X connect 16 0 26 0;
#X connect 18 0 3 1;
#X connect 20 0 5 0;
#X connect 20 0 21 0;
#X connect 22 0 28 0;
#X connect 23 0 0 1;
#X connect 23 0 6 0;
#X connect 24 0 15 0;
#X connect 25 0 29 0;
#X connect 26 0 13 0;
#X connect 27 0 14 1;
#X connect 28 0 29 0;
#X connect 29 0 14 0;
#X connect 30 0 20 0;
#X connect 30 0 23 0;
#X restore 30 257 pd computeFlux;
#N canvas 0 22 912 234 algorithmDescription 0;
#X text 581 161 h(n)= h(n-1)-(1/k) - select the first positive;
#X text 26 123 Z(n) = y(n) - MT(n);
#X text 151 124 --- apply filter;
#X text 26 84 y(n) = x(n)*(1/f) + y(n-1)/1+(1/f) -- iir lowpass filter
;
#X text 245 160 for h(n) => if [ peak(n) = 1 \, h(n)= 1] \;;
#X text 482 161 if [peak(n) = 0 \,;
#X text 537 104 -- Median + Mean adaptative Treshold Filter;
#X text 336 105 mn*mean( |y(n-a)| \, ... \, |y(n-b)|);
#X text 25 105 MT(n) = ft + md*median ( |y(n-a)| \, ... \, |y(n-b)|)
+;
#X text 26 160 Peak(n) = LM(n) > 0 && h(n-1) <= 0 /;
#X text 26 142 LM(n) = if[ Z(n)> 0 && Z(n) >= Z(n-mw...n+mw) \, 1]
else 0;
#X text 22 35 Based on (Brossier \, 2006);
#X text 24 63 PeakPicking Algorithm:;
#X text 368 142 -- find the Local Maxima if it's greater than zero
;
#X text 22 19 PEAK PICKING BY MEDIAN + MEAN ADPTATIVE THRESHOLD;
#X restore 745 35 pd algorithmDescription;
#X text 440 209 -- real-time onset detection --;
#X msg 428 247 start;
#N canvas 847 349 450 300 computeSpecFlux~ 0;
#X obj 27 145 *;
#X obj 101 128 > 55;
#X msg 165 61 normalize 0;
#X obj 165 39 loadbang;
#X obj 27 29 inlet~;
#X obj 27 187 outlet;
#X text 26 233 -- this subpatch computes spectral Flux of the audio
signal -- additionally it blocks too soft sounds from being detected
as onsets;
#N canvas 0 22 450 300 bang~ 0;
#X obj 72 46 bang~;
#X obj 72 165 outlet;
#X obj 72 116 spigot;
#X obj 150 50 inlet;
#X obj 237 58 block~ 512 1;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X restore 289 61 pd bang~;
#X obj 289 36 inlet;
#X obj 27 78 specFlux~ 512 128;
#X obj 101 104 env~ 512 512;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 4 0 10 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 0 0;
#X connect 10 0 1 0;
#X restore 475 371 pd computeSpecFlux~;
#X text 543 425 nr of adjacent values to ignore;
#X obj 533 248 adc~ 1;
#N canvas 52 22 786 323 playOnsetsSample 0;
#X obj 39 160 dac~;
#X obj 39 130 tabplay~ \$0-waveform;
#X obj 39 31 inlet;
#X obj 243 143 line;
#X obj 272 16 r \$0-length;
#X obj 243 79 f;
#X msg 241 114 0 \, 100000 \$1;
#X obj 262 50 / 44.1;
#X obj 39 82 t b b;
#X obj 39 56 route bang stop;
#X msg 88 86 stop;
#X obj 438 78 t f f;
#X obj 439 110 + 1;
#X obj 440 171 -;
#X obj 439 196 swap;
#X obj 438 220 pack;
#X obj 436 16 inlet;
#X obj 587 137 tabread \$0-attacks;
#X obj 442 137 tabread \$0-attacks;
#X obj 243 172 s \$0-scrub.r;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X connect 2 0 9 0;
#X connect 3 0 19 0;
#X connect 4 0 7 0;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 5 1;
#X connect 8 0 1 0;
#X connect 8 1 5 0;
#X connect 9 0 8 0;
#X connect 9 1 10 0;
#X connect 10 0 1 0;
#X connect 10 0 3 0;
#X connect 11 0 12 0;
#X connect 11 1 17 0;
#X connect 12 0 18 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 1 15 1;
#X connect 15 0 1 0;
#X connect 16 0 11 0;
#X connect 17 0 13 1;
#X connect 17 0 14 1;
#X connect 18 0 13 0;
#X restore 13 462 pd playOnsetsSample;
#X text 100 293 nr of adjacent values to ignore;
#X obj 533 280 *~;
#X obj 586 265 tgl 15 0 empty empty micOnOff 20 7 0 10 -262144 -1 -1
0 1;
#X floatatom 11 377 5 0 0 0 - - -;
#X text 51 381 nr of onsets detected;
#X text 404 248 2);
#X text 161 438 listen to onset nr;
#X obj 30 317 onsetDetect;
#X text 22 4 onset detection;
#X text 558 2 based on P. Brossier's algorithm and code by A. Monteiro
;
#X text 756 -15 2013 Gilberto Bernardes;
#N canvas 510 304 494 344 META 0;
#X text 12 45 LICENSE GPL v3;
#X text 12 215 RELEASE_DATE 2013;
#X text 12 195 WEBSITE https://sites.google.com/site/eargram/;
#X text 12 175 AUTHOR Gilberto Bernardes;
#X text 12 25 KEYWORDS;
#X text 12 155 LIBRARY earGram_abs;
#X text 12 65 DESCRIPTION onset detection;
#X text 12 84 INLET_0 float;
#X text 13 101 INLET_1 float;
#X text 14 118 INLET_2 anything;
#X text 13 135 OUTLET_1 float;
#X restore 853 560 pd META;
#X obj 475 447 onsetDetect;
#X connect 1 0 4 0;
#X connect 2 0 17 0;
#X connect 5 0 28 0;
#X connect 6 0 32 0;
#X connect 7 0 36 1;
#X connect 8 0 13 0;
#X connect 8 0 25 0;
#X connect 8 1 25 1;
#X connect 9 0 41 1;
#X connect 10 0 8 0;
#X connect 10 1 41 2;
#X connect 11 0 12 0;
#X connect 12 0 13 1;
#X connect 14 0 28 0;
#X connect 15 0 8 0;
#X connect 17 0 6 0;
#X connect 17 1 21 0;
#X connect 17 2 36 2;
#X connect 19 0 28 1;
#X connect 21 0 36 0;
#X connect 24 0 10 0;
#X connect 25 0 41 0;
#X connect 27 0 30 0;
#X connect 30 0 25 0;
#X connect 31 0 30 1;
#X connect 31 0 25 1;
#X connect 36 0 6 1;
#X connect 41 0 11 0;
