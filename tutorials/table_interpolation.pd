#N canvas 358 48 726 817 10;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array1 64 float 1;
#A 0 0.850252 0.196236 -0.767242 0.0702998 0.726023 -0.499729 0.565034
-0.287151 0.440437 -0.512383 0.956054 0.797184 0.172342 0.0488824 0.360789
-0.196973 -0.90576 -0.157256 0.798175 0.470352 0.887909 0.905318 0.616739
-0.341236 0.760028 -0.24046 0.260221 -0.293131 -0.0421944 -0.975465
-0.466797 -0.708345 -0.215399 -0.475005 0.366728 0.787862 -0.884447
0.900552 -0.916066 0.12736 -0.5868 0.715157 0.165669 -0.841477 -0.756891
0.0664499 -0.483875 0.505602 0.2895 -0.304861 -0.771544 0.928103 0.870869
0.594372 -0.149593 -0.819837 0.955615 -0.880885 0.149937 0.369919 0.677666
0.595524 0.380846 0.818891;
#X coords 0 1 63 -1 200 140 1 0 0;
#X restore 17 127 graph;
#X obj 16 69 noise~;
#X obj 16 90 tabsend~ array1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array2 64 float 1;
#A 0 -0.747479 -0.645583 -0.5306 -0.404876 -0.270934 -0.131508 0.0105846
0.152461 0.291252 0.424135 0.548425 0.661608 0.761368 0.845716 0.912912
0.96161 0.990838 0.999957 0.988836 0.957668 0.907089 0.838148 0.752193
0.651012 0.536637 0.411381 0.277796 0.138574 -0.0034521 -0.14541 -0.284418
-0.417668 -0.542447 -0.656236 -0.756736 -0.84188 -0.909982 -0.959633
-0.989835 -0.999999 -0.989864 -0.959693 -0.910068 -0.841994 -0.756874
-0.656394 -0.542625 -0.417859 -0.28462 -0.145619 -0.00366301 0.138366
0.277593 0.411188 0.536459 0.650852 0.752055 0.838033 0.907001 0.957609
0.988804 0.999956 0.990867 0.961667;
#X coords 0 1 63 -1 200 140 1 0 0;
#X restore 490 126 graph;
#X text 124 78 tabsend~ fills the entire table at each dsp block. Do
not mind the refresh ratio \, that is much slower than reality \, (i.e.
every 1.45 ms.);
#X obj 15 289 tabreceive~ array1;
#X text 120 612 this is just to show the effect of the scaling on the
complete table...;
#X text 262 173 note that the tables are 64 points long. This is because
of the blocksize. If you're using fft processing \, the table should
be = blockize~ (which you set via the [block~] object., f 33;
#X obj 488 93 tabsend~ array2;
#X obj 16 617 tabsend~ array3;
#X obj 488 72 osc~ 1000;
#X text 11 20 OBVIOUSLY \, TO RUN THIS PATCH YOU HAVE TO TURN ON THE
DSP COMPUTATION!, f 70;
#X obj 163 289 tabreceive~ array2;
#X obj 16 594 +~, f 25;
#X obj 16 569 *~;
#X text 298 348 INTERPOLATION can be seen as an scaled sumation of
two tables (containing the amplitude spectra of sounds A and B). The
scaling can be controled with a reciprocal amplitude control (i.e.
a crossfade);
#X obj 163 569 *~;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array3 64 float 1;
#A 0 0.512377 0.385247 0.250309 0.110303 -0.031942 -0.173539 -0.31162
-0.443381 -0.566169 -0.677467 -0.775046 -0.856922 -0.921418 -0.967262
-0.993484 -0.999581 -0.985433 -0.951291 -0.897892 -0.826285 -0.737935
-0.634643 -0.51847 -0.391804 -0.257193 -0.11737 0.0248301 0.166527
0.30485 0.436997 0.560281 0.672224 0.770529 0.853227 0.918641 0.96542
0.992656 0.999759 0.986608 0.953479 0.901 0.830283 0.742732 0.640129
0.524566 0.398353 0.264079 0.124451 -0.0176989 -0.159492 -0.298048
-0.430568 -0.554365 -0.666918 -0.76597 -0.849485 -0.915791 -0.96355
-0.991758 -0.99989 -0.987747 -0.955587 -0.90408 -0.834222;
#X coords 0 1 63 -1 200 140 1 0 0;
#X restore 18 656 graph;
#X obj 181 425 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 12700 1;
#X floatatom 178 447 5 0 0 0 - - -;
#X text 325 419 This slider controls the relative influence of spectra
A and B \, represented by 0 and 2 0.5 would represent a balanced mix
between the two spectra. So you just need to use this range to invert
the multiplication.;
#X obj 31 523 - 1;
#X obj 31 544 abs;
#X floatatom 44 568 5 0 0 0 - - -;
#X text 64 499 as you should figure \, this operation simply inverts
the range 0-1., f 15;
#X text 329 472 HERE IS WHERE YOU SHOULD PLUG YOUR INPUT SENSOR DATA!
;
#X connect 1 0 2 0;
#X connect 5 0 14 0;
#X connect 10 0 8 0;
#X connect 12 0 16 0;
#X connect 13 0 9 0;
#X connect 14 0 13 0;
#X connect 16 0 13 1;
#X connect 18 0 19 0;
#X connect 18 0 21 0;
#X connect 19 0 16 1;
#X connect 21 0 22 0;
#X connect 22 0 14 1;
#X connect 22 0 23 0;
