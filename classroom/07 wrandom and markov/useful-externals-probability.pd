#N canvas 197 166 1033 436 12;
#X declare -lib cyclone;
#X declare -lib zexy;
#X declare -path maxlib;
#X declare -path list-abs;
#X obj 36 140 linear;
#X text 26 60 various probability distributions from maxlib. all of
these implementations are taken from dodge & jersey \, chapter 11 (https://drive.google.com/open?id=1qUp--DyIdLc0KuhJZSFG2dfBq9WFgiUp)
;
#X obj 28 356 packel;
#X text 28 290 from zexy \, the [packel] object outputs the nth index
of an incoming list (beware that indexes start counting at 1!). There
are a few other useful objects in this library.;
#X obj 547 20 declare -lib cyclone;
#X obj 28 262 declare -lib zexy;
#X obj 555 179 coll;
#C restore;
#X obj 26 32 declare -path maxlib;
#X obj 596 179 zl;
#X text 546 48 cyclone is a library to facilitate compatibility with
max \, porting a few of its objects to pd. In particular \, coll will
be the most useful to deal with markov models (otherwise the pd-ish
way would be to approach it with tables \, as in the basshouse example
in the documentation. The zl family of objects are the max paradigm
for list manipulation. similarly \, the formatting object [sprintf]
can come handy to format indexes as symbols and back.;
#X obj 630 179 sprintf;
#X obj 552 261 declare -path list-abs;
#X obj 550 340 list-wrandom;
#X text 551 289 last \, this library is useful for dealing with lists.
The [list-wrandom] is the easiest was of reading custom pdf's.;
#X obj 96 140 triang;
#X obj 156 140 expo;
#X obj 209 140 gauss;
#X obj 269 140 cauchy;
#X obj 37 180 beta;
#X obj 97 180 weibull;
#X obj 173 180 poisson;
#X obj 251 178 bilex;
