#N canvas 209 37 554 576 10;
#X obj 53 -188 image trilinealcube.gif;
#X floatatom 5 -302 5 0 0 0 - - -;
#X floatatom 133 -304 5 0 0 0 - - -;
#X floatatom 61 -231 5 0 0 0 - - -;
#X floatatom -69 -230 5 0 0 0 - - -;
#X floatatom 5 -157 5 0 0 0 - - -;
#X floatatom 133 -159 5 0 0 0 - - -;
#X floatatom 61 -86 5 0 0 0 - - -;
#X floatatom -69 -85 5 0 0 0 - - -;
#X obj 261 -300 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 8100 1;
#X floatatom 261 -163 5 0 0 0 x - -;
#X obj 315 -301 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 9800 1;
#X floatatom 315 -164 5 0 0 0 y - -;
#X obj 367 -301 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 10300 1;
#X floatatom 367 -164 5 0 0 0 z - -;
#X obj 263 -4 trilineal;
#X floatatom 263 24 5 0 0 0 - - -;
#X text -117 -1 this demo patch shows an example of trilinear interpolation
you can set the values of each of the 8 corners of the cube (any value
is acceptable \, positive \, negative \, integer \, float) \, and then
you can "navigate" inside the cube moving x \, y or z (these values
are normalized between [0-1]. If you use a 3-value device (such as
the acceleration from a smartphone: accx \, accy \, accz) \, you will
need to normalize these values to 0-1 \, before sending them to [trilineal]
This could be used to control 1 parameter of one synth If you want
to control N parameters \, you will have to make N copies of the trilineal
object (with probably different values in the 8 corners) \, but send
the same x \, y \, z to all the N copies. sergi jorda (sergi.jorda@upf.edu)
2014 the graphic and formula are taken from: http://paulbourke.net/miscellaneous/interpolation/
;
#X connect 1 0 15 8;
#X connect 2 0 15 10;
#X connect 3 0 15 7;
#X connect 4 0 15 6;
#X connect 5 0 15 5;
#X connect 6 0 15 9;
#X connect 7 0 15 4;
#X connect 8 0 15 3;
#X connect 9 0 10 0;
#X connect 10 0 15 0;
#X connect 11 0 12 0;
#X connect 12 0 15 1;
#X connect 13 0 14 0;
#X connect 14 0 15 2;
#X connect 15 0 16 0;
