#N canvas 13 22 1254 752 24;
#X obj 585 243 table ciclo 2051;
#X msg 28 289 \; ciclo sinesum 2051 1;
#X text 23 -65 un problema con estas ondas generadas matemáticamente
\, es que no están limitadas (tienen infinitos componentes) ==> ALIASING!
una forma de evitarlo es generarlas a partir de Fourier. Como q la
suma de componentes será finita \, la onda resultante estará limitada
en frecuencia. Además \, emulará mejor el sonido analógico \, que nunca
es "perfecto". Para ello \, crearemos una tabla para guardar un ciclo
\, y lo llenaremos usando "sinesum". Se suele usar un ciclo de 2048
muestras (al q se añaden 3 por razones "internas" --> 2051);
#X text 23 349 SAWTOOTH: cada harmónico tiene intensidad 1/N 1 \, 1/2
\, 1/3 \, 1/4 \, 1/5....;
#X text 368 287 crea una onda sinusoidal (1 harm de amp=1);
#X msg 26 429 \; ciclo sinesum 2051 1 0.5 0.333 0.25 0.2;
#X text 24 516 hay q normalizar;
#X msg 23 561 \; ciclo normalize 1;
#X msg 350 566 \; ciclo sinesum 2051 1 0.5 0.333 0.25 0.2 0.1666 0.1428
0.125 0.111 0.1;
#X text 345 516 más precisa (10 harmonicos);
